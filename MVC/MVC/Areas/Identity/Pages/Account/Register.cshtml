@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<style>
    #password-strength-meter {
        margin-top: 10px;
        height: 10px;
        background-color: #ddd;
        border-radius: 5px;
        overflow: hidden;
    }

    .strength-bar {
        height: 100%;
        transition: width 0.3s;
    }

    #password-strength-text {
        margin-top: 5px;
        font-weight: bold;
    }
</style>

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-floating">
                <input asp-for="Input.Email" class="form-control" autocomplete="email" aria-required="true" />
                <label asp-for="Input.Email"></label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.Username" class="form-control" autocomplete="username" />
                <label asp-for="Input.Username"></label>
                <span asp-validation-for="Input.Username" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input id="Input_Password" asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.Password"></label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
                <div id="password-strength-meter" style="margin-top: 10px; height: 10px; background-color: #ddd; border-radius: 5px; overflow: hidden;">
                    <span class="strength-bar" id="strength-bar" style="display: block; height: 100%; transition: width 0.3s;"></span>
                </div>
                <span id="password-strength-text" style="margin-top: 5px; display: block;"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.ConfirmPassword"></label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const passwordInput = document.querySelector("#Input_Password");
            const strengthBar = document.getElementById("strength-bar");
            const strengthText = document.getElementById("password-strength-text");

            passwordInput.addEventListener("input", function () {
                const password = passwordInput.value;
                const strength = calculateStrength(password);
                updateStrengthMeter(strength);
            });

            function calculateStrength(password) {
                let strength = 0;
                if (password.length >= 16) strength++;
                if (/[A-Z]/.test(password)) strength++;
                if (/[a-z]/.test(password)) strength++;
                if (/[0-9]/.test(password)) strength++;
                if (/[^A-Za-z0-9]/.test(password)) strength++;
                return strength;
            }

            function updateStrengthMeter(strength) {
                const colors = ["red", "orange", "yellow", "blue", "green"];
                const texts = ["Weak", "Fair", "Good", "Strong", "Very Strong"];
                strength = Math.min(Math.max(strength, 0), 5);
                const width = (strength / 5) * 100;

                strengthBar.style.width = width + "%";
                strengthBar.style.backgroundColor = colors[strength - 1] || "red";
                strengthText.textContent = texts[strength - 1] || "Weak";
            }
        });
    </script>
}
